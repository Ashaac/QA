<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.6.8 on win32)" generated="20210214 11:01:22.506" rpa="false">
<suite id="s1" name="T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test">
<suite id="s1-s1" name="T0 verify admin" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T0_verify_admin.robot">
<kw name="Open Budget Application" library="loginPage" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${url}</arg>
<arg>Chrome</arg>
<arg>add_argument("--disable-popup-blocking"); add_argument("--ignore-certificate-errors") error</arg>
</arguments>
<msg timestamp="20210214 11:01:22.865" level="INFO">Opening browser 'Chrome' to base url 'https://10.13.189.56:8443/cas/login?service=https%3A%2F%2F10.13.189.56%3A8443%2Fbudget%2Flogin%2Fcas'.</msg>
<status status="PASS" starttime="20210214 11:01:22.864" endtime="20210214 11:01:25.783"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20210214 11:01:25.783" endtime="20210214 11:01:25.914"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks the button identified by ``locator``.</doc>
<arguments>
<arg>details-button</arg>
</arguments>
<msg timestamp="20210214 11:01:25.915" level="INFO">Clicking button 'details-button'.</msg>
<status status="PASS" starttime="20210214 11:01:25.914" endtime="20210214 11:01:26.032"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>proceed-link</arg>
</arguments>
<msg timestamp="20210214 11:01:26.033" level="INFO">Clicking element 'proceed-link'.</msg>
<status status="PASS" starttime="20210214 11:01:26.033" endtime="20210214 11:01:33.958"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2S</arg>
</arguments>
<msg timestamp="20210214 11:01:35.972" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:01:33.958" endtime="20210214 11:01:35.973"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:22.864" endtime="20210214 11:01:35.976"></status>
</kw>
<test id="s1-s1-t1" name="Verify that login page works properly and is authenticated">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Verify Login Page is successful</arg>
</arguments>
<kw name="Verify Login Page is successful" library="loginPage">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>title should be login</arg>
</arguments>
<kw name="Title should be login" library="loginPage">
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>Login - CAS – Central Authentication Service</arg>
</arguments>
<msg timestamp="20210214 11:01:36.010" level="INFO">Page title is 'Login - CAS – Central Authentication Service'.</msg>
<status status="PASS" starttime="20210214 11:01:35.995" endtime="20210214 11:01:36.010"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:35.993" endtime="20210214 11:01:36.010"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:35.991" endtime="20210214 11:01:36.011"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>page should contain header text</arg>
</arguments>
<kw name="page should contain header text" library="loginPage">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>element should be visible</arg>
<arg>${header_text}</arg>
<arg>message=Extenso Data Budget Operation Secured Login</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>${header_text}</arg>
<arg>message=Extenso Data Budget Operation Secured Login</arg>
</arguments>
<msg timestamp="20210214 11:01:36.064" level="INFO">Element 'id=servicedesc' is displayed.</msg>
<status status="PASS" starttime="20210214 11:01:36.013" endtime="20210214 11:01:36.064"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:36.012" endtime="20210214 11:01:36.065"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:36.011" endtime="20210214 11:01:36.065"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:36.011" endtime="20210214 11:01:36.065"></status>
</kw>
<kw name="Enter valid Username" library="loginPage">
<arguments>
<arg>admin</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20210214 11:01:36.067" endtime="20210214 11:01:36.114"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20210214 11:01:36.115" level="INFO">Typing text 'admin' into text field 'id=username'.</msg>
<status status="PASS" starttime="20210214 11:01:36.114" endtime="20210214 11:01:36.205"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:36.065" endtime="20210214 11:01:36.205"></status>
</kw>
<kw name="Enter valid Password" library="loginPage">
<arguments>
<arg>admin123</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20210214 11:01:36.205" endtime="20210214 11:01:36.230"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20210214 11:01:36.231" level="INFO">Typing text 'admin123' into text field 'id=password'.</msg>
<status status="PASS" starttime="20210214 11:01:36.230" endtime="20210214 11:01:36.335"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:36.205" endtime="20210214 11:01:36.335"></status>
</kw>
<kw name="Click Submit" library="loginPage">
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>name=submit</arg>
<arg>RETURN</arg>
</arguments>
<msg timestamp="20210214 11:01:36.336" level="INFO">Sending key(s) ('RETURN',) to name=submit element.</msg>
<msg timestamp="20210214 11:01:57.847" level="INFO">Pressing special key RETURN to element.</msg>
<msg timestamp="20210214 11:01:57.847" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20210214 11:01:36.335" endtime="20210214 11:01:57.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:01:59.966" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:01:57.951" endtime="20210214 11:01:59.967"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:36.335" endtime="20210214 11:01:59.969"></status>
</kw>
<kw name="Get Cookies" library="SeleniumLibrary">
<doc>Returns all cookies of the current page.</doc>
<assign>
<var>${cookies}</var>
</assign>
<msg timestamp="20210214 11:01:59.996" level="INFO">${cookies} = JSESSIONID=189AAAA93B04129CC0E10AA445D65112</msg>
<status status="PASS" starttime="20210214 11:01:59.970" endtime="20210214 11:01:59.996"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${cookies}</arg>
<arg>${cookies}</arg>
</arguments>
<msg timestamp="20210214 11:02:00.001" level="INFO">${cookies} = JSESSIONID=189AAAA93B04129CC0E10AA445D65112</msg>
<status status="PASS" starttime="20210214 11:01:59.997" endtime="20210214 11:02:00.001"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:35.988" endtime="20210214 11:02:00.002"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:35.986" endtime="20210214 11:02:00.002"></status>
</kw>
<status status="PASS" starttime="20210214 11:01:35.977" endtime="20210214 11:02:00.003" critical="yes"></status>
</test>
<doc>This suite verifies admin login page</doc>
<status status="PASS" starttime="20210214 11:01:22.539" endtime="20210214 11:02:00.007"></status>
</suite>
<suite id="s1-s2" name="T0 verify user management" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T0_verify_user_management.robot">
<test id="s1-s2-t1" name="Verify User Add">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click on User Management</arg>
</arguments>
<kw name="Click on User Management" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${toggle_usermanagement_xpath}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:00.110" endtime="20210214 11:02:00.131"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${toggle_usermanagement_xpath}</arg>
</arguments>
<msg timestamp="20210214 11:02:00.131" level="INFO">Clicking element '//li[@id='user']//div'.</msg>
<status status="PASS" starttime="20210214 11:02:00.131" endtime="20210214 11:02:00.174"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20210214 11:02:03.187" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20210214 11:02:00.175" endtime="20210214 11:02:03.187"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:00.109" endtime="20210214 11:02:03.188"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:00.109" endtime="20210214 11:02:03.188"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click Users</arg>
</arguments>
<kw name="Click Users" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${click_users_xpath}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:03.192" endtime="20210214 11:02:03.265"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_users_xpath}</arg>
</arguments>
<msg timestamp="20210214 11:02:03.266" level="INFO">Clicking element '//li//a[@id='user_info']'.</msg>
<status status="PASS" starttime="20210214 11:02:03.265" endtime="20210214 11:02:03.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20210214 11:02:06.382" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20210214 11:02:03.375" endtime="20210214 11:02:06.383"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:03.191" endtime="20210214 11:02:06.384"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:03.190" endtime="20210214 11:02:06.385"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:00.108" endtime="20210214 11:02:06.387" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Refresh User Button">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Refresh User Button</arg>
</arguments>
<kw name="Refresh User Button" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${refresh_button_xpath}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:06.398" endtime="20210214 11:02:06.457"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${refresh_button_xpath}</arg>
</arguments>
<msg timestamp="20210214 11:02:06.458" level="INFO">Clicking element '//app-userdashboard/div/div/div/div/div[2]/div[1]/span/button[2]'.</msg>
<status status="PASS" starttime="20210214 11:02:06.458" endtime="20210214 11:02:06.580"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:07.592" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:06.581" endtime="20210214 11:02:07.593"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:06.396" endtime="20210214 11:02:07.594"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:06.395" endtime="20210214 11:02:07.595"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:06.393" endtime="20210214 11:02:07.598" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Click Add User">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click Add User</arg>
</arguments>
<kw name="Click Add User" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${add_button}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:07.630" endtime="20210214 11:02:07.689"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${add_button}</arg>
</arguments>
<msg timestamp="20210214 11:02:07.690" level="INFO">Clicking element '//app-userdashboard/div/div/div/div/div[2]/div[1]/span/button[1]'.</msg>
<status status="PASS" starttime="20210214 11:02:07.689" endtime="20210214 11:02:07.898"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:08.903" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:07.898" endtime="20210214 11:02:08.904"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:07.628" endtime="20210214 11:02:08.906"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:07.627" endtime="20210214 11:02:08.906"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:07.622" endtime="20210214 11:02:08.908" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="vaidate inputs of users name">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate inputs of name</arg>
<arg>testing1a1</arg>
</arguments>
<kw name="validate inputs of name" library="userManagementPage">
<arguments>
<arg>testing1a1</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_name}</arg>
</arguments>
<msg timestamp="20210214 11:02:08.921" level="INFO">Clicking element '//input[@id='name']'.</msg>
<status status="PASS" starttime="20210214 11:02:08.918" endtime="20210214 11:02:09.038"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${input_name}</arg>
<arg>${user_name}</arg>
</arguments>
<msg timestamp="20210214 11:02:09.039" level="INFO">Typing text 'testing1a1' into text field '//input[@id='name']'.</msg>
<status status="PASS" starttime="20210214 11:02:09.039" endtime="20210214 11:02:09.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:10.206" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:09.196" endtime="20210214 11:02:10.207"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:08.916" endtime="20210214 11:02:10.208"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:08.915" endtime="20210214 11:02:10.209"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:08.912" endtime="20210214 11:02:10.213" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="validate inputs of users username">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate inputs of users username</arg>
<arg>testing1a1</arg>
</arguments>
<kw name="validate inputs of users username" library="userManagementPage">
<arguments>
<arg>testing1a1</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_username}</arg>
</arguments>
<msg timestamp="20210214 11:02:10.233" level="INFO">Clicking element '//input[@id='username']'.</msg>
<status status="PASS" starttime="20210214 11:02:10.233" endtime="20210214 11:02:10.325"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${input_username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20210214 11:02:10.326" level="INFO">Typing text 'testing1a1' into text field '//input[@id='username']'.</msg>
<status status="PASS" starttime="20210214 11:02:10.326" endtime="20210214 11:02:10.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:11.439" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:10.431" endtime="20210214 11:02:11.440"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:10.232" endtime="20210214 11:02:11.441"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:10.231" endtime="20210214 11:02:11.441"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:10.229" endtime="20210214 11:02:11.444" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="validate inputs of users password">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate inputs of users password</arg>
<arg>testing1a1</arg>
</arguments>
<kw name="validate inputs of users password" library="userManagementPage">
<arguments>
<arg>testing1a1</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_password}</arg>
</arguments>
<msg timestamp="20210214 11:02:11.464" level="INFO">Clicking element '//input[@id='password']'.</msg>
<status status="PASS" starttime="20210214 11:02:11.463" endtime="20210214 11:02:11.590"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${input_password}</arg>
<arg>${password}</arg>
</arguments>
<msg timestamp="20210214 11:02:11.591" level="INFO">Typing text 'testing1a1' into text field '//input[@id='password']'.</msg>
<status status="PASS" starttime="20210214 11:02:11.590" endtime="20210214 11:02:11.686"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:12.688" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:11.686" endtime="20210214 11:02:12.688"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:11.462" endtime="20210214 11:02:12.688"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:11.461" endtime="20210214 11:02:12.688"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:11.458" endtime="20210214 11:02:12.689" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="validate inputs of users email">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate inputs of users email</arg>
<arg>testing1a1@gmail.com</arg>
</arguments>
<kw name="validate inputs of users email" library="userManagementPage">
<arguments>
<arg>testing1a1@gmail.com</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_email}</arg>
</arguments>
<msg timestamp="20210214 11:02:12.692" level="INFO">Clicking element '//input[@id='email']'.</msg>
<status status="PASS" starttime="20210214 11:02:12.692" endtime="20210214 11:02:12.756"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${input_email}</arg>
<arg>${enter_email}</arg>
</arguments>
<msg timestamp="20210214 11:02:12.757" level="INFO">Typing text 'testing1a1@gmail.com' into text field '//input[@id='email']'.</msg>
<status status="PASS" starttime="20210214 11:02:12.756" endtime="20210214 11:02:12.900"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:13.915" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:12.900" endtime="20210214 11:02:13.916"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:12.691" endtime="20210214 11:02:13.916"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:12.691" endtime="20210214 11:02:13.917"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:12.690" endtime="20210214 11:02:13.919" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="verify click in input roles">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>verify click in input roles</arg>
</arguments>
<kw name="verify click in input roles" library="userManagementPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:14.943" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:13.930" endtime="20210214 11:02:14.944"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_role_list}</arg>
</arguments>
<msg timestamp="20210214 11:02:14.946" level="INFO">Clicking element '//mat-select[@id='mat-select-0']'.</msg>
<status status="PASS" starttime="20210214 11:02:14.944" endtime="20210214 11:02:15.109"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_role}</arg>
</arguments>
<msg timestamp="20210214 11:02:15.110" level="INFO">Clicking element '//mat-option[@id='role_2']'.</msg>
<status status="PASS" starttime="20210214 11:02:15.110" endtime="20210214 11:02:15.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:16.194" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:15.179" endtime="20210214 11:02:16.194"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:13.929" endtime="20210214 11:02:16.195"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:13.928" endtime="20210214 11:02:16.195"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:13.925" endtime="20210214 11:02:16.198" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="verify click list and input region">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>verify click list and input region</arg>
<arg>Region 1</arg>
</arguments>
<kw name="verify click list and input region" library="userManagementPage">
<arguments>
<arg>Region 1</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${region_list}</arg>
</arguments>
<msg timestamp="20210214 11:02:16.211" level="INFO">Clicking element '//mat-select[@id='mat-select-1']'.</msg>
<status status="PASS" starttime="20210214 11:02:16.210" endtime="20210214 11:02:16.351"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:17.359" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:16.351" endtime="20210214 11:02:17.361"></status>
</kw>
<kw name="defination of region" library="userManagementPage">
<arguments>
<arg>${region_name}</arg>
</arguments>
<assign>
<var>${id_region}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"${region}"=="Region 1"</arg>
<arg>region_0</arg>
<arg>"${region}"=="Region 2"</arg>
<arg>region_1</arg>
<arg>"${region}"=="Region 3"</arg>
<arg>region_2</arg>
<arg>"${region}"=="Region 4"</arg>
<arg>region_3</arg>
<arg>"${region}"=="Region 5"</arg>
<arg>region_4</arg>
<arg>"${region}"=="Region 6"</arg>
<arg>region_5</arg>
<arg>"${region}"=="Region 7"</arg>
<arg>region_6</arg>
<arg>"${region}"=="Region 8"</arg>
<arg>region_7</arg>
<arg>"${region}"=="Region 9"</arg>
<arg>region_8</arg>
<arg>"${region}"=="Jhapa Region"</arg>
<arg>region_9</arg>
<arg>"${region}"=="Kathmandu Valley Region"</arg>
<arg>region_10</arg>
<arg>"${region}"=="Pokhara Valley Region"</arg>
<arg>region_11</arg>
<arg>"${region}"=="Unknown"</arg>
<arg>region_12</arg>
</arguments>
<assign>
<var>${region_name}</var>
</assign>
<msg timestamp="20210214 11:02:17.371" level="INFO">${region_name} = region_0</msg>
<status status="PASS" starttime="20210214 11:02:17.366" endtime="20210214 11:02:17.371"></status>
</kw>
<msg timestamp="20210214 11:02:17.374" level="INFO">${id_region} = region_0</msg>
<status status="PASS" starttime="20210214 11:02:17.362" endtime="20210214 11:02:17.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:18.391" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:17.375" endtime="20210214 11:02:18.391"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>//mat-option[@id='${id_region}']</arg>
</arguments>
<msg timestamp="20210214 11:02:18.393" level="INFO">Clicking element '//mat-option[@id='region_0']'.</msg>
<status status="PASS" starttime="20210214 11:02:18.392" endtime="20210214 11:02:18.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:19.522" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:18.522" endtime="20210214 11:02:19.523"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_outside_role}</arg>
</arguments>
<msg timestamp="20210214 11:02:19.526" level="INFO">Clicking element '//div[@class='cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing']'.</msg>
<status status="PASS" starttime="20210214 11:02:19.524" endtime="20210214 11:02:19.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:20.648" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:19.646" endtime="20210214 11:02:20.649"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:16.208" endtime="20210214 11:02:20.650"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:16.206" endtime="20210214 11:02:20.650"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:16.203" endtime="20210214 11:02:20.652" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="verify that click in branch list">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>verify that click in branch list</arg>
</arguments>
<kw name="verify that click in branch list" library="userManagementPage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_branch_list}</arg>
</arguments>
<msg timestamp="20210214 11:02:20.665" level="INFO">Clicking element '//mat-select[@id='mat-select-2']'.</msg>
<status status="PASS" starttime="20210214 11:02:20.663" endtime="20210214 11:02:20.764"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:21.776" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:20.764" endtime="20210214 11:02:21.777"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_branch}</arg>
</arguments>
<msg timestamp="20210214 11:02:21.779" level="INFO">Clicking element '//perfect-scrollbar//mat-option[@id='branch_1']'.</msg>
<status status="PASS" starttime="20210214 11:02:21.778" endtime="20210214 11:02:21.878"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:22.892" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:21.879" endtime="20210214 11:02:22.893"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_outside_role}</arg>
</arguments>
<msg timestamp="20210214 11:02:22.895" level="INFO">Clicking element '//div[@class='cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing']'.</msg>
<status status="PASS" starttime="20210214 11:02:22.894" endtime="20210214 11:02:23.036"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:24.047" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:23.037" endtime="20210214 11:02:24.048"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:20.662" endtime="20210214 11:02:24.049"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:20.661" endtime="20210214 11:02:24.049"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:20.658" endtime="20210214 11:02:24.053" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="Click User Add Button">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click User Add Button</arg>
</arguments>
<kw name="Click User Add Button" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${add_user_click_button_xpath}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:24.062" endtime="20210214 11:02:24.124"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:25.140" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:24.124" endtime="20210214 11:02:25.141"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks the button identified by ``locator``.</doc>
<arguments>
<arg>${add_user_click_button_xpath}</arg>
</arguments>
<msg timestamp="20210214 11:02:25.143" level="INFO">Clicking button '//button[@id='add_user_btn']'.</msg>
<status status="PASS" starttime="20210214 11:02:25.141" endtime="20210214 11:02:25.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:26.383" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:25.369" endtime="20210214 11:02:26.384"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${notify_xpath}</arg>
</arguments>
<assign>
<var>${count_notify}</var>
</assign>
<msg timestamp="20210214 11:02:26.428" level="INFO">${count_notify} = 1</msg>
<status status="PASS" starttime="20210214 11:02:26.384" endtime="20210214 11:02:26.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count_notify}&gt;0</arg>
<arg>wait until element is not visible</arg>
<arg>${notify_xpath}</arg>
<arg>ELSE</arg>
<arg>Click close user add button</arg>
</arguments>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is not visible.</doc>
<arguments>
<arg>${notify_xpath}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:26.430" endtime="20210214 11:02:30.375"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:26.429" endtime="20210214 11:02:30.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:02:32.389" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:02:30.376" endtime="20210214 11:02:32.390"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:24.061" endtime="20210214 11:02:32.391"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:24.060" endtime="20210214 11:02:32.391"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:24.058" endtime="20210214 11:02:32.394" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="Pagination change">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Pagination change</arg>
</arguments>
<kw name="Pagination change" library="templateButtonPage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>//div[@class='ant-select-selection__rendered']</arg>
</arguments>
<msg timestamp="20210214 11:02:32.414" level="INFO">Clicking element '//div[@class='ant-select-selection__rendered']'.</msg>
<status status="PASS" starttime="20210214 11:02:32.413" endtime="20210214 11:02:32.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:33.557" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:32.553" endtime="20210214 11:02:33.558"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>//li[starts-with(@class,'ant-select-dropdown-menu-item')][last()]</arg>
</arguments>
<msg timestamp="20210214 11:02:33.560" level="INFO">Clicking element '//li[starts-with(@class,'ant-select-dropdown-menu-item')][last()]'.</msg>
<status status="PASS" starttime="20210214 11:02:33.559" endtime="20210214 11:02:33.789"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:02:35.792" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:02:33.789" endtime="20210214 11:02:35.792"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:32.412" endtime="20210214 11:02:35.793"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:32.411" endtime="20210214 11:02:35.793"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:32.409" endtime="20210214 11:02:35.794" critical="yes"></status>
</test>
<test id="s1-s2-t13" name="Click edit user button in User Management">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>click edit button from user page</arg>
</arguments>
<kw name="click edit button from user page" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>//tr[starts-with(@class,'ant-table-row ng-star-inserted')][last()]//td[8]/button[1]</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:35.797" endtime="20210214 11:02:35.830"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks the button identified by ``locator``.</doc>
<arguments>
<arg>//tr[starts-with(@class,'ant-table-row ng-star-inserted')][last()]//td[8]/button[1]</arg>
</arguments>
<msg timestamp="20210214 11:02:35.830" level="INFO">Clicking button '//tr[starts-with(@class,'ant-table-row ng-star-inserted')][last()]//td[8]/button[1]'.</msg>
<status status="PASS" starttime="20210214 11:02:35.830" endtime="20210214 11:02:36.005"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:35.797" endtime="20210214 11:02:36.005"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:35.797" endtime="20210214 11:02:36.005"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:35.795" endtime="20210214 11:02:36.006" critical="yes"></status>
</test>
<test id="s1-s2-t14" name="Click edit name in User Management">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate inputs of name</arg>
<arg>testing121</arg>
</arguments>
<kw name="validate inputs of name" library="userManagementPage">
<arguments>
<arg>testing121</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_name}</arg>
</arguments>
<msg timestamp="20210214 11:02:36.010" level="INFO">Clicking element '//input[@id='name']'.</msg>
<status status="PASS" starttime="20210214 11:02:36.009" endtime="20210214 11:02:36.110"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${input_name}</arg>
<arg>${user_name}</arg>
</arguments>
<msg timestamp="20210214 11:02:36.111" level="INFO">Typing text 'testing121' into text field '//input[@id='name']'.</msg>
<status status="PASS" starttime="20210214 11:02:36.111" endtime="20210214 11:02:36.265"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:37.275" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:36.265" endtime="20210214 11:02:37.276"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:36.009" endtime="20210214 11:02:37.277"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:36.008" endtime="20210214 11:02:37.278"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:36.007" endtime="20210214 11:02:37.280" critical="yes"></status>
</test>
<test id="s1-s2-t15" name="Click edit username in User Management">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate inputs of users username</arg>
<arg>testing121</arg>
</arguments>
<kw name="validate inputs of users username" library="userManagementPage">
<arguments>
<arg>testing121</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_username}</arg>
</arguments>
<msg timestamp="20210214 11:02:37.294" level="INFO">Clicking element '//input[@id='username']'.</msg>
<status status="PASS" starttime="20210214 11:02:37.293" endtime="20210214 11:02:37.406"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${input_username}</arg>
<arg>${username}</arg>
</arguments>
<msg timestamp="20210214 11:02:37.407" level="INFO">Typing text 'testing121' into text field '//input[@id='username']'.</msg>
<status status="PASS" starttime="20210214 11:02:37.406" endtime="20210214 11:02:37.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:38.537" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:37.529" endtime="20210214 11:02:38.538"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:37.291" endtime="20210214 11:02:38.539"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:37.289" endtime="20210214 11:02:38.540"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:37.285" endtime="20210214 11:02:38.544" critical="yes"></status>
</test>
<test id="s1-s2-t16" name="Click edit email in User Management">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>validate inputs of users email</arg>
<arg>testing121@gmail.com</arg>
</arguments>
<kw name="validate inputs of users email" library="userManagementPage">
<arguments>
<arg>testing121@gmail.com</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${input_email}</arg>
</arguments>
<msg timestamp="20210214 11:02:38.583" level="INFO">Clicking element '//input[@id='email']'.</msg>
<status status="PASS" starttime="20210214 11:02:38.582" endtime="20210214 11:02:38.674"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${input_email}</arg>
<arg>${enter_email}</arg>
</arguments>
<msg timestamp="20210214 11:02:38.675" level="INFO">Typing text 'testing121@gmail.com' into text field '//input[@id='email']'.</msg>
<status status="PASS" starttime="20210214 11:02:38.674" endtime="20210214 11:02:38.821"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:39.835" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:38.821" endtime="20210214 11:02:39.836"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:38.580" endtime="20210214 11:02:39.837"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:38.578" endtime="20210214 11:02:39.838"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:38.574" endtime="20210214 11:02:39.841" critical="yes"></status>
</test>
<test id="s1-s2-t17" name="Click edit user click list and input region">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>verify edit user click list and input region</arg>
<arg>Region 2</arg>
</arguments>
<kw name="verify edit user click list and input region" library="userManagementPage">
<arguments>
<arg>Region 2</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>//app-adduser/div/div/mat-card/mat-card-content/form/div[5]/mat-form-field/div/div[1]/div/mat-select[@placeholder="Region"]</arg>
</arguments>
<msg timestamp="20210214 11:02:39.859" level="INFO">Clicking element '//app-adduser/div/div/mat-card/mat-card-content/form/div[5]/mat-form-field/div/div[1]/div/mat-select[@placeholder="Region"]'.</msg>
<status status="PASS" starttime="20210214 11:02:39.858" endtime="20210214 11:02:39.962"></status>
</kw>
<kw name="defination of region" library="userManagementPage">
<arguments>
<arg>${region_name}</arg>
</arguments>
<assign>
<var>${id_region}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"${region}"=="Region 1"</arg>
<arg>region_0</arg>
<arg>"${region}"=="Region 2"</arg>
<arg>region_1</arg>
<arg>"${region}"=="Region 3"</arg>
<arg>region_2</arg>
<arg>"${region}"=="Region 4"</arg>
<arg>region_3</arg>
<arg>"${region}"=="Region 5"</arg>
<arg>region_4</arg>
<arg>"${region}"=="Region 6"</arg>
<arg>region_5</arg>
<arg>"${region}"=="Region 7"</arg>
<arg>region_6</arg>
<arg>"${region}"=="Region 8"</arg>
<arg>region_7</arg>
<arg>"${region}"=="Region 9"</arg>
<arg>region_8</arg>
<arg>"${region}"=="Jhapa Region"</arg>
<arg>region_9</arg>
<arg>"${region}"=="Kathmandu Valley Region"</arg>
<arg>region_10</arg>
<arg>"${region}"=="Pokhara Valley Region"</arg>
<arg>region_11</arg>
<arg>"${region}"=="Unknown"</arg>
<arg>region_12</arg>
</arguments>
<assign>
<var>${region_name}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"${region}"=="Region 2"</arg>
<arg>region_1</arg>
<arg>"${region}"=="Region 3"</arg>
<arg>region_2</arg>
<arg>"${region}"=="Region 4"</arg>
<arg>region_3</arg>
<arg>"${region}"=="Region 5"</arg>
<arg>region_4</arg>
<arg>"${region}"=="Region 6"</arg>
<arg>region_5</arg>
<arg>"${region}"=="Region 7"</arg>
<arg>region_6</arg>
<arg>"${region}"=="Region 8"</arg>
<arg>region_7</arg>
<arg>"${region}"=="Region 9"</arg>
<arg>region_8</arg>
<arg>"${region}"=="Jhapa Region"</arg>
<arg>region_9</arg>
<arg>"${region}"=="Kathmandu Valley Region"</arg>
<arg>region_10</arg>
<arg>"${region}"=="Pokhara Valley Region"</arg>
<arg>region_11</arg>
<arg>"${region}"=="Unknown"</arg>
<arg>region_12</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:39.965" endtime="20210214 11:02:39.966"></status>
</kw>
<msg timestamp="20210214 11:02:39.966" level="INFO">${region_name} = region_1</msg>
<status status="PASS" starttime="20210214 11:02:39.964" endtime="20210214 11:02:39.966"></status>
</kw>
<msg timestamp="20210214 11:02:39.967" level="INFO">${id_region} = region_1</msg>
<status status="PASS" starttime="20210214 11:02:39.963" endtime="20210214 11:02:39.967"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>//mat-option[@id='${id_region}']</arg>
</arguments>
<msg timestamp="20210214 11:02:39.968" level="INFO">Clicking element '//mat-option[@id='region_1']'.</msg>
<status status="PASS" starttime="20210214 11:02:39.967" endtime="20210214 11:02:40.108"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:41.116" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:40.108" endtime="20210214 11:02:41.117"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_outside_role}</arg>
</arguments>
<msg timestamp="20210214 11:02:41.119" level="INFO">Clicking element '//div[@class='cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing']'.</msg>
<status status="PASS" starttime="20210214 11:02:41.117" endtime="20210214 11:02:41.227"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:42.238" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:41.228" endtime="20210214 11:02:42.239"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:39.857" endtime="20210214 11:02:42.240"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:39.856" endtime="20210214 11:02:42.240"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:39.852" endtime="20210214 11:02:42.242" critical="yes"></status>
</test>
<test id="s1-s2-t18" name="Click edit user in branch list">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>verify that edit click in branch list</arg>
</arguments>
<kw name="verify that edit click in branch list" library="userManagementPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:43.256" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:42.253" endtime="20210214 11:02:43.257"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${edit_branch}</arg>
</arguments>
<msg timestamp="20210214 11:02:43.259" level="INFO">Clicking element '//app-adduser/div/div/mat-card/mat-card-content/form/div[6]/mat-form-field/div/div[1]/div/mat-select[@placeholder="Branch"]'.</msg>
<status status="PASS" starttime="20210214 11:02:43.258" endtime="20210214 11:02:43.456"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:44.470" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:43.456" endtime="20210214 11:02:44.471"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>//perfect-scrollbar//mat-option[@id='branch_0']</arg>
</arguments>
<msg timestamp="20210214 11:02:44.471" level="INFO">Clicking element '//perfect-scrollbar//mat-option[@id='branch_0']'.</msg>
<status status="PASS" starttime="20210214 11:02:44.471" endtime="20210214 11:02:44.584"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:45.593" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:44.585" endtime="20210214 11:02:45.593"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${click_outside_role}</arg>
</arguments>
<msg timestamp="20210214 11:02:45.595" level="INFO">Clicking element '//div[@class='cdk-overlay-backdrop cdk-overlay-transparent-backdrop cdk-overlay-backdrop-showing']'.</msg>
<status status="PASS" starttime="20210214 11:02:45.594" endtime="20210214 11:02:45.698"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:02:47.706" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:02:45.698" endtime="20210214 11:02:47.706"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:42.251" endtime="20210214 11:02:47.707"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:42.250" endtime="20210214 11:02:47.707"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:42.247" endtime="20210214 11:02:47.709" critical="yes"></status>
</test>
<test id="s1-s2-t19" name="Click button edit user">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click Edit user Button</arg>
</arguments>
<kw name="Click Edit user Button" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${edit_user_btn}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:47.717" endtime="20210214 11:02:47.752"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:48.764" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:47.753" endtime="20210214 11:02:48.765"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks the button identified by ``locator``.</doc>
<arguments>
<arg>${edit_user_btn}</arg>
</arguments>
<msg timestamp="20210214 11:02:48.768" level="INFO">Clicking button '//button[@id="edit_user_btn"]'.</msg>
<status status="PASS" starttime="20210214 11:02:48.766" endtime="20210214 11:02:48.923"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:02:49.933" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:02:48.923" endtime="20210214 11:02:49.934"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${notify_xpath}</arg>
</arguments>
<assign>
<var>${count_notify}</var>
</assign>
<msg timestamp="20210214 11:02:49.978" level="INFO">${count_notify} = 1</msg>
<status status="PASS" starttime="20210214 11:02:49.935" endtime="20210214 11:02:49.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count_notify}&gt;0</arg>
<arg>wait until element is not visible</arg>
<arg>${notify_xpath}</arg>
<arg>ELSE</arg>
<arg>Click close user add button</arg>
</arguments>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is not visible.</doc>
<arguments>
<arg>${notify_xpath}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:49.981" endtime="20210214 11:02:53.828"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:49.979" endtime="20210214 11:02:53.828"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:02:55.842" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:02:53.829" endtime="20210214 11:02:55.844"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:47.716" endtime="20210214 11:02:55.845"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:47.715" endtime="20210214 11:02:55.845"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:47.712" endtime="20210214 11:02:55.847" critical="yes"></status>
</test>
<test id="s1-s2-t20" name="click delete user button">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>click delete user button</arg>
</arguments>
<kw name="click delete user button" library="userManagementPage">
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks the button identified by ``locator``.</doc>
<arguments>
<arg>//tr[starts-with(@class,'ant-table-row ng-star-inserted')][last()]//td[8]/button[2]</arg>
</arguments>
<msg timestamp="20210214 11:02:55.865" level="INFO">Clicking button '//tr[starts-with(@class,'ant-table-row ng-star-inserted')][last()]//td[8]/button[2]'.</msg>
<status status="PASS" starttime="20210214 11:02:55.865" endtime="20210214 11:02:56.014"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:55.864" endtime="20210214 11:02:56.014"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:55.863" endtime="20210214 11:02:56.014"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Yes delete user</arg>
</arguments>
<kw name="Yes delete user" library="userManagementPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:02:58.026" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:02:56.017" endtime="20210214 11:02:58.027"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${ok_delete}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:02:58.027" endtime="20210214 11:02:58.098"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${ok_delete}</arg>
</arguments>
<msg timestamp="20210214 11:02:58.099" level="INFO">Clicking element '//html/body/div[2]/div[2]/button[1]'.</msg>
<status status="PASS" starttime="20210214 11:02:58.098" endtime="20210214 11:02:58.220"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:03:00.234" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:02:58.220" endtime="20210214 11:03:00.235"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${ok_delete}</arg>
</arguments>
<msg timestamp="20210214 11:03:00.236" level="INFO">Clicking element '//html/body/div[2]/div[2]/button[1]'.</msg>
<status status="PASS" starttime="20210214 11:03:00.235" endtime="20210214 11:03:00.336"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20210214 11:03:02.349" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210214 11:03:00.336" endtime="20210214 11:03:02.350"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:56.016" endtime="20210214 11:03:02.351"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:56.015" endtime="20210214 11:03:02.351"></status>
</kw>
<status status="PASS" starttime="20210214 11:02:55.859" endtime="20210214 11:03:02.353" critical="yes"></status>
</test>
<test id="s1-s2-t21" name="Click on User Management">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click on User Management</arg>
</arguments>
<kw name="Click on User Management" library="userManagementPage">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${toggle_usermanagement_xpath}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:03:02.367" endtime="20210214 11:03:02.414"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${toggle_usermanagement_xpath}</arg>
</arguments>
<msg timestamp="20210214 11:03:02.415" level="INFO">Clicking element '//li[@id='user']//div'.</msg>
<status status="PASS" starttime="20210214 11:03:02.414" endtime="20210214 11:03:02.523"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20210214 11:03:05.528" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20210214 11:03:02.523" endtime="20210214 11:03:05.528"></status>
</kw>
<status status="PASS" starttime="20210214 11:03:02.363" endtime="20210214 11:03:05.529"></status>
</kw>
<status status="PASS" starttime="20210214 11:03:02.362" endtime="20210214 11:03:05.529"></status>
</kw>
<status status="PASS" starttime="20210214 11:03:02.358" endtime="20210214 11:03:05.531" critical="yes"></status>
</test>
<doc>this suite verifies User Management page.</doc>
<status status="PASS" starttime="20210214 11:02:00.015" endtime="20210214 11:03:05.548"></status>
</suite>
<suite id="s1-s3" name="T1 verify adhoc assign" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T1_verify_adhoc_assign.robot">
<test id="s1-s3-t1" name="Click on budget">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click Budget</arg>
</arguments>
<kw name="Click Budget" library="navigateSidebar">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:03:06.655" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:03:05.650" endtime="20210214 11:03:06.655"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>//li[@id='budget']</arg>
</arguments>
<status status="PASS" starttime="20210214 11:03:06.655" endtime="20210214 11:03:06.679"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>//li[@id='budget']</arg>
</arguments>
<msg timestamp="20210214 11:03:06.679" level="INFO">Clicking element '//li[@id='budget']'.</msg>
<status status="PASS" starttime="20210214 11:03:06.679" endtime="20210214 11:03:06.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20210214 11:03:07.736" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20210214 11:03:06.729" endtime="20210214 11:03:07.737"></status>
</kw>
<status status="PASS" starttime="20210214 11:03:05.650" endtime="20210214 11:03:07.738"></status>
</kw>
<status status="PASS" starttime="20210214 11:03:05.650" endtime="20210214 11:03:07.739"></status>
</kw>
<status status="PASS" starttime="20210214 11:03:05.648" endtime="20210214 11:03:07.741" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="click to adhoc templates">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>click to adhoc templates</arg>
</arguments>
<kw name="click to adhoc templates" library="adhocTemplateAssign">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${adhoc_click}</arg>
</arguments>
<status status="PASS" starttime="20210214 11:03:07.754" endtime="20210214 11:03:07.813"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${adhoc_click}</arg>
</arguments>
<msg timestamp="20210214 11:03:07.813" level="INFO">Clicking element '//a[@id='budget_adhoc']'.</msg>
<status status="PASS" starttime="20210214 11:03:07.813" endtime="20210214 11:03:07.973"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<status status="FAIL" starttime="20210214 11:03:07.973" endtime="20210214 11:03:09.565"></status>
</kw>
<status status="FAIL" starttime="20210214 11:03:07.752" endtime="20210214 11:03:09.566"></status>
</kw>
<status status="FAIL" starttime="20210214 11:03:07.750" endtime="20210214 11:03:09.566"></status>
</kw>
<status status="FAIL" starttime="20210214 11:03:07.747" endtime="20210214 11:03:09.570" critical="yes">Execution terminated by signal</status>
</test>
<doc>this suite verifies adhoc assign page.</doc>
<status status="FAIL" starttime="20210214 11:03:05.580" endtime="20210214 11:03:09.573"></status>
</suite>
<suite id="s1-s4" name="T1 verify budget guidelines" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T1_verify_budget_guidelines.robot">
<test id="s1-s4-t1" name="Click guidelines">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.583" endtime="20210214 11:03:09.584" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-t2" name="Add guideline">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.586" endtime="20210214 11:03:09.587" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-t3" name="Input name and value">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.593" endtime="20210214 11:03:09.595" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-t4" name="click add items in guidelines">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.596" endtime="20210214 11:03:09.596" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-t5" name="click save guidelines button">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.598" endtime="20210214 11:03:09.599" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>this suite verifies Guidelines page.</doc>
<status status="FAIL" starttime="20210214 11:03:09.579" endtime="20210214 11:03:09.600"></status>
</suite>
<suite id="s1-s5" name="T1 verify capex prebudget" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T1_verify_capex_prebudget.robot">
<test id="s1-s5-t1" name="Verify Capex Prebudget">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.608" endtime="20210214 11:03:09.609" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t2" name="Test api">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.610" endtime="20210214 11:03:09.611" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t3" name="Verify Capex Download Worksheet Template button is clicked and downloaded">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.611" endtime="20210214 11:03:09.612" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t4" name="Verify that Capex Download Excel Template button is clicked">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.613" endtime="20210214 11:03:09.613" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t5" name="Verify that Capex Upload Worksheet button is working">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.614" endtime="20210214 11:03:09.616" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t6" name="Upload file after click upload">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.619" endtime="20210214 11:03:09.620" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t7" name="Click on Capex Upload worksheet difference tab">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.623" endtime="20210214 11:03:09.625" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t8" name="Click on Capex Upload submit to database">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.627" endtime="20210214 11:03:09.628" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t9" name="Verify that Capex Refresh Button prebudget is clicked">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.629" endtime="20210214 11:03:09.630" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t10" name="Click on Capex Yearly tab">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.635" endtime="20210214 11:03:09.636" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t11" name="Verify to Capex input values in Capex unit price prebudget">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.637" endtime="20210214 11:03:09.638" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t12" name="Verify that Capex Save Button is clicked">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.639" endtime="20210214 11:03:09.641" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t13" name="Verify that Capex Yes button is clicked and values are saved">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.642" endtime="20210214 11:03:09.643" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t14" name="Click on Capex Monthly tab">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.644" endtime="20210214 11:03:09.645" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t15" name="Click on Capex Quarterly tab">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.646" endtime="20210214 11:03:09.647" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t16" name="Click on Capex Yearly tab">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.649" endtime="20210214 11:03:09.649" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t17" name="Verify that Capex Guideline Button is working">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.651" endtime="20210214 11:03:09.652" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t18" name="Validate test Capex Remarks to branch 1">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.654" endtime="20210214 11:03:09.655" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s5-t19" name="Verify that Capex History Button is working">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.658" endtime="20210214 11:03:09.658" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>this suite verifies Capex prebudget.</doc>
<status status="FAIL" starttime="20210214 11:03:09.605" endtime="20210214 11:03:09.660"></status>
</suite>
<suite id="s1-s6" name="T2 verify hr prebudget" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T2_verify_hr_prebudget.robot">
<test id="s1-s6-t1" name="Verify Hr Prebudget">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.669" endtime="20210214 11:03:09.671" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>this suite verifies hr template prebudget.</doc>
<status status="FAIL" starttime="20210214 11:03:09.666" endtime="20210214 11:03:09.674"></status>
</suite>
<suite id="s1-s7" name="T3 verify activity prebudget" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T3_verify_activity_prebudget.robot">
<test id="s1-s7-t1" name="Verify that Activity Based Prebudget Sidebar is clicked">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.682" endtime="20210214 11:03:09.682" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>this suite verifies Activity based template</doc>
<status status="FAIL" starttime="20210214 11:03:09.678" endtime="20210214 11:03:09.684"></status>
</suite>
<suite id="s1-s8" name="T4 verify bs prebudget" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T4_verify_bs_prebudget.robot">
<test id="s1-s8-t1" name="Verify that BalanceSheet Prebudget Sidebar is clicked">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.692" endtime="20210214 11:03:09.693" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>this suite verifies Capex page.</doc>
<status status="FAIL" starttime="20210214 11:03:09.688" endtime="20210214 11:03:09.694"></status>
</suite>
<suite id="s1-s9" name="T5 verify profitloss prebudget" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T5_verify_profitloss_prebudget.robot">
<test id="s1-s9-t1" name="Verify that ProfitLoss Prebudget Sidebar is clicked">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.701" endtime="20210214 11:03:09.702" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>this suite verifies Capex page.</doc>
<status status="FAIL" starttime="20210214 11:03:09.697" endtime="20210214 11:03:09.704"></status>
</suite>
<suite id="s1-s10" name="T6 simulation after prebudget" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T6_simulation_after_prebudget.robot">
<test id="s1-s10-t1" name="Click on Simulation Button Template">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.709" endtime="20210214 11:03:09.709" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t2" name="click Yes for simulation template">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.711" endtime="20210214 11:03:09.712" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t3" name="Click on Prebudget menu">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.713" endtime="20210214 11:03:09.714" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t4" name="Click on Activity Monitoring">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.715" endtime="20210214 11:03:09.716" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t5" name="click to Execution log">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.718" endtime="20210214 11:03:09.719" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t6" name="Approve click simulation">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.720" endtime="20210214 11:03:09.721" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t7" name="Click on Cancel approve simulation">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.721" endtime="20210214 11:03:09.722" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s10-t8" name="Download prebudget result">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.723" endtime="20210214 11:03:09.723" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>this suite verifies simulation page.</doc>
<status status="FAIL" starttime="20210214 11:03:09.707" endtime="20210214 11:03:09.725"></status>
</suite>
<suite id="s1-s11" name="T7 quarterlyReport consolidation" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T7_quarterlyReport_consolidation.robot">
<test id="s1-s11-t1" name="Click quarterlyReports Section">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.734" endtime="20210214 11:03:09.739" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s11-t2" name="Click Balance sheet quarterlyReports">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.740" endtime="20210214 11:03:09.741" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>This suite verifies quarterly report page</doc>
<status status="FAIL" starttime="20210214 11:03:09.729" endtime="20210214 11:03:09.743"></status>
</suite>
<suite id="s1-s12" name="T8 specialReport consolidation" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T8_specialReport_consolidation.robot">
<test id="s1-s12-t1" name="Click specialReports Section">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.750" endtime="20210214 11:03:09.750" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s12-t2" name="Click Balance sheet specialReports">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.751" endtime="20210214 11:03:09.752" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>This suite verifies specialReport page</doc>
<status status="FAIL" starttime="20210214 11:03:09.746" endtime="20210214 11:03:09.753"></status>
</suite>
<suite id="s1-s13" name="T9 template Consolidation" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T9_template_Consolidation.robot">
<test id="s1-s13-t1" name="Click template Consolidation">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.760" endtime="20210214 11:03:09.760" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t2" name="Balance sheet Template Consolidation">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.761" endtime="20210214 11:03:09.762" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t3" name="Click Download template Consolidation">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.763" endtime="20210214 11:03:09.763" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s13-t4" name="Click refresh template Consolidation">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.764" endtime="20210214 11:03:09.766" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>This suite verifies Template page</doc>
<status status="FAIL" starttime="20210214 11:03:09.757" endtime="20210214 11:03:09.769"></status>
</suite>
<suite id="s1-s14" name="T9 verify report consolidation" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\T9_verify_report_consolidation.robot">
<test id="s1-s14-t1" name="Click Reports">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.776" endtime="20210214 11:03:09.776" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t2" name="Click Balance sheet Reports">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.777" endtime="20210214 11:03:09.778" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t3" name="Click Dropdown Reports and download">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.778" endtime="20210214 11:03:09.779" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t4" name="Click Refresh Report">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.780" endtime="20210214 11:03:09.780" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t5" name="Close Reports">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.782" endtime="20210214 11:03:09.783" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s14-t6" name="click logout">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.784" endtime="20210214 11:03:09.785" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>This suite verifies Template page</doc>
<status status="FAIL" starttime="20210214 11:03:09.772" endtime="20210214 11:03:09.786"></status>
</suite>
<suite id="s1-s15" name="Test" source="E:\QAautomation\Budget-Automation\budget_admin\test_suites\test.robot">
<test id="s1-s15-t1" name="db test">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20210214 11:03:09.793" endtime="20210214 11:03:09.794" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" starttime="20210214 11:03:09.790" endtime="20210214 11:03:09.795"></status>
</suite>
<status status="FAIL" starttime="20210214 11:01:22.508" endtime="20210214 11:03:09.810"></status>
</suite>
<statistics>
<total>
<stat pass="23" fail="52">Critical Tests</stat>
<stat pass="23" fail="52">All Tests</stat>
</total>
<tag>
<stat pass="23" fail="1" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="51">robot:exit</stat>
</tag>
<suite>
<stat pass="23" fail="52" id="s1" name="T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test</stat>
<stat pass="1" fail="0" id="s1-s1" name="T0 verify admin">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T0 verify admin</stat>
<stat pass="21" fail="0" id="s1-s2" name="T0 verify user management">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T0 verify user management</stat>
<stat pass="1" fail="1" id="s1-s3" name="T1 verify adhoc assign">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T1 verify adhoc assign</stat>
<stat pass="0" fail="5" id="s1-s4" name="T1 verify budget guidelines">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T1 verify budget guidelines</stat>
<stat pass="0" fail="19" id="s1-s5" name="T1 verify capex prebudget">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T1 verify capex prebudget</stat>
<stat pass="0" fail="1" id="s1-s6" name="T2 verify hr prebudget">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T2 verify hr prebudget</stat>
<stat pass="0" fail="1" id="s1-s7" name="T3 verify activity prebudget">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T3 verify activity prebudget</stat>
<stat pass="0" fail="1" id="s1-s8" name="T4 verify bs prebudget">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T4 verify bs prebudget</stat>
<stat pass="0" fail="1" id="s1-s9" name="T5 verify profitloss prebudget">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T5 verify profitloss prebudget</stat>
<stat pass="0" fail="8" id="s1-s10" name="T6 simulation after prebudget">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T6 simulation after prebudget</stat>
<stat pass="0" fail="2" id="s1-s11" name="T7 quarterlyReport consolidation">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T7 quarterlyReport consolidation</stat>
<stat pass="0" fail="2" id="s1-s12" name="T8 specialReport consolidation">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T8 specialReport consolidation</stat>
<stat pass="0" fail="4" id="s1-s13" name="T9 template Consolidation">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T9 template Consolidation</stat>
<stat pass="0" fail="6" id="s1-s14" name="T9 verify report consolidation">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T9 verify report consolidation</stat>
<stat pass="0" fail="1" id="s1-s15" name="Test">T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.Test</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210214 11:03:09.648" level="WARN">Multiple test cases with name 'Click on Capex Yearly tab' executed in test suite 'T0 verify admin &amp; T0 verify user management &amp; T1 verify adhoc assign &amp; T1 verify budget guidelines &amp; T1 verify capex prebudget &amp; T2 verify hr prebudget &amp; T3 verify activity prebudget &amp; T4 verify bs prebudget &amp; T5 verify profitloss prebudget &amp; T6 simulation after prebudget &amp; T7 quarterlyReport consolidation &amp; T8 specialReport consolidation &amp; T9 template Consolidation &amp; T9 verify report consolidation &amp; Test.T1 verify capex prebudget'.</msg>
</errors>
</robot>
